name: Deploy to server production

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }} to install dependencies & build
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Create env file
        run: |
          echo "NEXT_PUBLIC_APP_NAME=${{ vars.NEXT_PUBLIC_APP_NAME }}" >> .env.production
          echo "NEXT_PUBLIC_HOST=${{ vars.NEXT_PUBLIC_HOST }}" >> .env.production
          echo "NEXT_PUBLIC_PROJECT_ID=${{ vars.NEXT_PUBLIC_PROJECT_ID }}" >> .env.production
          echo "NEXT_PUBLIC_CLIENT_KEY=${{ vars.NEXT_PUBLIC_CLIENT_KEY }}" >> .env.production
          echo "NEXT_PUBLIC_APP_ID=${{ vars.NEXT_PUBLIC_APP_ID }}" >> .env.production
          echo "AUTH_SECRET=${{ secrets.AUTH_SECRET }}" >> .env.production
          echo "PRIVATE_KEY=${{ secrets.PRIVATE_KEY }}" >> .env.production
          echo "SHYFT_API_KEY=${{ secrets.SHYFT_API_KEY }}" >> .env.production
          echo "NEXT_PUBLIC_SHYFT_URL=${{ vars.NEXT_PUBLIC_SHYFT_URL }}" >> .env.production
          echo "DASAPI_CLUSTER_URL=${{ vars.DASAPI_CLUSTER_URL }}" >> .env.production
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env.production
          echo "DIRECT_URL=${{ secrets.DIRECT_URL }}" >> .env.production
          echo "AUTH_URL=${{ vars.AUTH_URL }}" >> .env.production
          echo "AUTH_TRUST_HOST=${{ vars.AUTH_TRUST_HOST }}" >> .env.production
          echo "UPSTASH_REDIS_URL=${{ secrets.UPSTASH_REDIS_URL }}" >> .env.production
          echo "UPSTASH_REDIS_TOKEN=${{ secrets.UPSTASH_REDIS_TOKEN }}" >> .env.production
          echo "NEXT_PUBLIC_AGROTREE_PROGRAM_ID=${{ vars.NEXT_PUBLIC_AGROTREE_PROGRAM_ID }}" >> .env.production
          echo "NEXT_PUBLIC_SUPABASE_URL=${{ vars.NEXT_PUBLIC_SUPABASE_URL }}" >> .env.production
          echo "NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ vars.NEXT_PUBLIC_SUPABASE_ANON_KEY }}" >> .env.production
        working-directory: ${{ github.workspace }}

      - name: Build docker image
        run: docker build -t ${{ vars.DOCKERHUB_HOST }}/agrotree-marketplace:latest .

      - name: Push docker image
        run: |
          docker login ${{ vars.DOCKERHUB_HOST }} -u ${{ vars.DOCKERHUB_USERNAME }} -p ${{ vars.DOCKERHUB_PASSWORD }}
          docker push ${{ vars.DOCKERHUB_HOST }}/agrotree-marketplace:latest
          docker logout ${{ vars.DOCKERHUB_HOST }}
